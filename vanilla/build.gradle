buildscript {
	repositories {
		mavenLocal()
		jcenter()
	}
}
plugins {
	id "java"
	id "com.palantir.graal" version "0.3.0-2-g6c49b4d"
	id "com.mageddo.graal-reflection-configuration-generator" version "2.0.1"
}

repositories {
	mavenLocal()
	jcenter()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def className =  "com.mageddo.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

task run(type: JavaExec){
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

graal {
	mainClass className
	graalVersion(graalVMVersion)
	outputName(project.name)
	downloadBaseUrl("https://github.com/oracle/graal/releases/download/vm-19.0.2/graalvm-ce-linux-amd64-19.0.2.tar.gz#")
	option("-H:IncludeResources=.*.yml")
	option("--allow-incomplete-classpath")
	option("-H:ReflectionConfigurationFiles=build/reflect.json")
	option("-H:+AllowVMInspection")
	option("-H:+ReportUnsupportedElementsAtRuntime")
	option("-H:EnableURLProtocols=http,https")
	option("--enable-all-security-services")
	option("-Dfile.encoding=UTF-8")
	option("--no-server")
	option("-J-Xmx5G")
}

dependencies {

	compile('com.mageddo:rsl:1.0.0')
	annotationProcessor('com.mageddo:rsl-compiler:1.0.1')
	testAnnotationProcessor('com.mageddo:rsl-compiler:1.0.1')

//	tag::graal[]
	compile ("com.mageddo:graal-reflection-configuration:2.0.0")
	compileOnly("com.oracle.substratevm:svm:${graalVMVersion}")
	compile("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	//end::graal[]

	compile "ch.qos.logback:logback-classic:1.2.3"

	testCompile "junit:junit:4.12"

}

task fatJar(type: Jar) {
	baseName = project.name + '-all'
	manifest {
		attributes (
			'Main-Class': className,
			'Class-Path': configurations.compile.collect { "lib/${it.name}" }.join(' ')
		)
	}
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

nativeImage.dependsOn(tasks.reflectConfigFiles)
