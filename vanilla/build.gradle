buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
  }
}
plugins {
  id 'java'
  id 'org.graalvm.buildtools.native' version '0.10.2'
  id "com.github.johnrengelman.shadow" version "8.1.1"
}

repositories {
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

def className = "com.mageddo.Application"

task debug(type: JavaExec) {
  debug = true
  classpath = sourceSets.main.runtimeClasspath
  main = className
}

task run(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = className
}

// https://graalvm.github.io/native-build-tools/latest/gradle-plugin.html
graalvmNative {
  binaries {
    main {

      javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.matching("GraalVM Community")
      }
      // Main options
      imageName = project.name
      mainClass = className
//      debug = true
      verbose = true
      fallback = false
      buildArgs.add('-J-Xmx5G')
    }
  }
}

dependencies {

  compileOnly 'org.projectlombok:lombok:1.18.34'
  annotationProcessor 'org.projectlombok:lombok:1.18.34'
  compileOnly("com.mageddo.nativeimage:reflection-config-generator:2.4.4")
  annotationProcessor("com.mageddo.nativeimage:reflection-config-generator:2.4.4")

  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

  testCompileOnly 'org.projectlombok:lombok:1.18.34'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
  implementation "ch.qos.logback:logback-classic:1.5.6"

  dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.3")
    testImplementation("org.mockito:mockito-junit-jupiter:5.12.0")
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}

jar {
  manifest {
    attributes(
      "Main-Class": className
    )
  }
}

shadowJar {
  mergeServiceFiles()
}
