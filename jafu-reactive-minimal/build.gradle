plugins {
	id "java"
	id "com.palantir.graal" version "0.3.0-2-g6c49b4d"
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

graal {
	graalVersion("1.0.0-rc13")
	outputName(project.name)
	mainClass("com.sample.Application")
	option("-H:IncludeResources=static|META-INF/.*.json|META-INF/spring.factories|org/springframework/boot/logging/.*")
	option("--allow-incomplete-classpath")
	option("--delay-class-initialization-to-runtime=org.springframework.core.io.VfsUtils,org.springframework.format.support.DefaultFormattingConversionService")
	option("-H:ReflectionConfigurationFiles=graal/boot.json,graal/framework.json,graal/log4j.json")
	option("-H:+ReportUnsupportedElementsAtRuntime")
	option("-Dfile.encoding=UTF-8")
	option("--no-server")
}

dependencies {
	implementation("org.springframework.fu:spring-fu-jafu:0.0.6.BUILD-SNAPSHOT")

	implementation("org.springframework.boot:spring-boot-starter-webflux:2.1.3.RELEASE")
	implementation("org.springframework.boot:spring-boot-starter-jetty:2.1.3.RELEASE")
	implementation("org.springframework.boot:spring-boot-starter-mustache:2.1.3.RELEASE")
	implementation("org.graalvm.sdk:graal-sdk:1.0.0-rc13")

	testImplementation("org.springframework:spring-test:5.1.5.RELEASE")
	testImplementation("io.projectreactor:reactor-test:3.2.6.RELEASE")
	testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url = "https://repo.spring.io/milestone"
	}
	maven {
		url = "https://repo.spring.io/snapshot"
	}
}

configurations.all {
	exclude module: "javax.annotation-api"
	exclude module: "hibernate-validator"
	exclude module: "spring-boot-starter-reactor-netty"
}
