plugins {
	id "java"
	id "application"
	id "com.palantir.graal" version "0.6.0-43-gd59c8dc"
}

repositories {
	mavenLocal()
	mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_11
mainClassName = "com.mageddo.graalvm.okhttp.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
}

graal {
	mainClass mainClassName
	graalVersion(graalVMVersion)
	outputName(project.name)
	downloadBaseUrl("https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.0/graalvm-ce-java11-linux-amd64-19.3.0.tar.gz#")
	option("--no-server")
}

dependencies {

	compileOnly("com.mageddo.nativeimage:reflection-config-generator:2.1.1")
	annotationProcessor("com.mageddo.nativeimage:reflection-config-generator:2.1.1")

	compile("ch.qos.logback:logback-classic:1.2.3")
	compile("com.squareup.okhttp3:okhttp:4.3.1-SNAPSHOT")
	compile("com.fasterxml.jackson.core:jackson-databind:2.9.9")

//	tag::graal[]
	compileOnly("com.oracle.substratevm:svm:19.2.1")
	compile("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	//end::graal[]

}

task copyToLib(type: Copy) {
	into "$buildDir/libs/lib"
	from configurations.runtime
}

task fatJar(type: Jar, dependsOn: copyToLib) {
	archiveBaseName = "${project.name}-all"
	manifest {
		attributes(
			'Main-Class': mainClassName,
			'Class-Path': configurations.runtime.collect { "lib/${it.name}" }.join(' ')
		)
	}
	with jar
}
