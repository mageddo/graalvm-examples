buildscript {
	repositories {
		mavenLocal()
	}
}
plugins {
	id "java"
	id "com.palantir.graal" version "0.3.0-2-g6c49b4d"
	id "com.mageddo.graal-reflection-configuration-generator" version "2.0.0"
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def className = "com.mageddo.micronaut.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

task run(type: JavaExec){
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

graal {
	mainClass className
	graalVersion(graalVMVersion)
	outputName(project.name)
	option("-H:IncludeResources=static/.*")
	option("-H:IncludeResources=logback.xml|application.yml|views/.*")
	option("-H:IncludeResources=application.properties")
	option("--allow-incomplete-classpath")
	option("-H:ReflectionConfigurationFiles=build/reflect.json,graal/micronaut.json")
	option("-H:+AllowVMInspection")
	option("--rerun-class-initialization-at-runtime=sun.security.jca.JCAUtil\$CachedSecureRandomHolder,javax.net.ssl.SSLContext")
	option("--delay-class-initialization-to-runtime=io.netty.handler.codec.http.HttpObjectEncoder,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder,io.netty.handler.ssl.util.ThreadLocalInsecureRandom,com.sun.jndi.dns.DnsClient")
	option("-H:+ReportUnsupportedElementsAtRuntime")
	option("-H:EnableURLProtocols=http")
	option("-Dfile.encoding=UTF-8")
	option("--no-server")
}

dependencies {

	compile 'com.zaxxer:HikariCP:3.3.1'
	compile ("org.postgresql:postgresql:42.2.5")
	compile group: 'net.java.dev.jna', name: 'jna', version: '5.2.0'
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: '5.2.0'

	compile ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	compile ("io.micronaut:micronaut-spring:${micronautVersion}")

	annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-http-client:${micronautVersion}"
	compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
	compile "io.micronaut:micronaut-runtime:${micronautVersion}"

	compile "io.micronaut:micronaut-inject:${micronautVersion}"
	annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
	compileOnly "io.micronaut:micronaut-inject-java:${micronautVersion}"
	testCompile "io.micronaut:micronaut-inject-java:${micronautVersion}"

	compile ("io.micronaut:micronaut-views:${micronautVersion}")
	runtime ('org.thymeleaf:thymeleaf:3.0.11.RELEASE')

	compile('com.mageddo:rsl:1.0.0')
	annotationProcessor('com.mageddo:rsl-compiler:1.0.1')
	testAnnotationProcessor('com.mageddo:rsl-compiler:1.0.1')

//	tag::graal[]
	compile ("com.mageddo:graal-reflection-configuration:2.0.0")
	compileOnly("com.oracle.substratevm:svm:${graalVMVersion}")
	runtime("io.micronaut:micronaut-graal:${micronautVersion}")
	compile("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	//end::graal[]

	runtime "ch.qos.logback:logback-classic:1.2.3"
	implementation ("org.aspectj:aspectjrt:1.9.2")

	testCompile "junit:junit:4.12"

}
