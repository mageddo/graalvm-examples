plugins {
	id "java"
	id "com.github.johnrengelman.shadow" version "5.2.0"
	id "org.mikeneck.graalvm-native-image" version "0.3.0"
	id "org.flywaydb.flyway" version "6.0.8"
}

allprojects {
	repositories {
		mavenCentral()
	}
	apply plugin: 'java'
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

def mainClassName = "com.mageddo.micronaut.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
}

nativeImage {
	graalVmHome = System.getProperty("java.home")
	mainClass = mainClassName
	executableName = rootProject.name
	arguments(
		"--no-server",
		"-J-Xmx5G"
	)
}

flyway {
	url = "jdbc:postgresql://localhost:5433/db"
	user = "root"
	password = "root"
	validateOnMigrate = false
	locations = ['filesystem:src/main/resources/db/migrations']
}

configurations {
	compile.exclude module: 'spring-jcl'
}

dependencies {

	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'

	compileOnly("com.mageddo.lombok:lombok-ext:2.3.3")
	annotationProcessor("com.mageddo.lombok:lombok-ext:2.3.3")

	compile ("com.zaxxer:HikariCP:3.3.1")
	compile ("org.postgresql:postgresql:42.2.5")

	compile ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	compile ("io.micronaut:micronaut-spring:${micronautVersion}")
//	compile ("io.micronaut.configuration:micronaut-jdbc-hikari:1.2.3")

	annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-http-client:${micronautVersion}"
	compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
	compile "io.micronaut:micronaut-runtime:${micronautVersion}"

	compileOnly "io.micronaut:micronaut-inject-java:${micronautVersion}"
	annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
	compile "io.micronaut:micronaut-inject:${micronautVersion}"
	compile ("io.micronaut:micronaut-views-thymeleaf:1.2.0")
	compile ("io.micronaut:micronaut-management:${micronautVersion}")

	compile("com.mageddo:commons:1.5.0")
	compile ("ch.qos.logback:logback-classic:1.2.3")

//	tag::graal[]
	annotationProcessor "io.micronaut:micronaut-graal:${micronautVersion}"
	compileOnly("com.oracle.substratevm:svm:19.2.1")
	compile ("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	compile ("commons-logging:commons-logging:1.2")

	//end::graal[]

	testCompileOnly 'org.projectlombok:lombok:1.18.10'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

	testCompileOnly("com.mageddo.lombok:lombok-ext:2.3.3")
	testAnnotationProcessor("com.mageddo.lombok:lombok-ext:2.3.3")

	testAnnotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

	testCompile(project(":test-commons"))

}

test {
	useJUnitPlatform()
}

project(":test-commons"){
	dependencies {

		compileOnly 'org.projectlombok:lombok:1.18.10'
		annotationProcessor 'org.projectlombok:lombok:1.18.10'

		compileOnly("com.mageddo.lombok:lombok-ext:2.3.3")
		annotationProcessor("com.mageddo.lombok:lombok-ext:2.3.3")

		annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

		compile "org.junit.jupiter:junit-jupiter:5.4.2"
		compile "org.mockito:mockito-junit-jupiter:3.1.0"
		compile "io.rest-assured:rest-assured:4.1.2"
		compile "io.micronaut.test:micronaut-test-junit5:1.1.2"
		compile "io.micronaut.configuration:micronaut-flyway:1.1.0"
		compile "io.zonky.test:embedded-postgres:1.2.5"
		compile 'io.zonky.test.postgres:embedded-postgres-binaries-bom:11.6.0'
		compile "io.micronaut:micronaut-inject-java:${micronautVersion}"
		compileOnly ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	}
}

jar {
	manifest {
		attributes "Main-Class": mainClassName
	}
}

shadowJar {
	mergeServiceFiles()
	append 'META-INF/spring.handlers'
	append 'META-INF/spring.schemas'
	append 'META-INF/spring.tooling'
	transform(com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer) {
		paths = ['META-INF/spring.factories' ]
		mergeStrategy = "append"
	}
}
