plugins {
	id "java"
	id "com.github.johnrengelman.shadow" version "5.2.0"
	id "org.mikeneck.graalvm-native-image" version "0.3.0"
	id "org.flywaydb.flyway" version "6.0.8"
}

repositories {
	mavenCentral()
}
sourceCompatibility = JavaVersion.VERSION_11

def mainClassName = "com.mageddo.micronaut.Application"

task run(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
}

task debug(type: JavaExec) {
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
}

nativeImage {
	graalVmHome = System.getProperty("java.home")
	mainClass = mainClassName
	executableName = rootProject.name
	arguments(
		"--no-server",
		"-J-Xmx7G"
	)
}

flyway {
	url = "jdbc:postgresql://localhost:5433/db"
	user = "root"
	password = "root"
	validateOnMigrate = false
	locations = ["filesystem:src/main/resources/db/migrations"]
}

configurations {
	compile.exclude module: "spring-jcl"
}

dependencies {

	compileOnly "org.projectlombok:lombok:1.18.10"
	annotationProcessor "org.projectlombok:lombok:1.18.10"
	compileOnly("com.mageddo.lombok:lombok-ext:2.3.3")
	annotationProcessor("com.mageddo.lombok:lombok-ext:2.3.3")

	compile("org.postgresql:postgresql:42.2.5")

	annotationProcessor platform("io.micronaut:micronaut-bom:${micronautVersion}")
	implementation platform("io.micronaut:micronaut-bom:${micronautVersion}")
	annotationProcessor("io.micronaut:micronaut-validation")

	compile("io.micronaut.configuration:micronaut-jdbc-hikari")
	compile("io.micronaut:micronaut-spring")
	compile("org.springframework:spring-jdbc:5.1.5.RELEASE")
	compile("io.micronaut:micronaut-validation")
	compile("io.micronaut:micronaut-http-server-netty")
	compile("io.micronaut:micronaut-runtime")

	annotationProcessor("io.micronaut:micronaut-inject-java")
	compileOnly("io.micronaut:micronaut-inject-java")
	compile("io.micronaut:micronaut-inject")
	compile("io.micronaut:micronaut-views-thymeleaf")
	compile("io.micronaut:micronaut-management")

	compile("com.mageddo:commons:1.5.0")
	compile("ch.qos.logback:logback-classic:1.2.3")

//	tag::graal[]
	annotationProcessor("io.micronaut:micronaut-graal")
	compileOnly("com.oracle.substratevm:svm:19.2.1")
	compile("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	compile("commons-logging:commons-logging:1.2")
	//end::graal[]

	testCompileOnly "org.projectlombok:lombok:1.18.10"
	testAnnotationProcessor "org.projectlombok:lombok:1.18.10"

	testCompileOnly("com.mageddo.lombok:lombok-ext:2.3.3")
	testAnnotationProcessor("com.mageddo.lombok:lombok-ext:2.3.3")

	testAnnotationProcessor platform("io.micronaut:micronaut-bom:${micronautVersion}")
	testImplementation platform("io.micronaut:micronaut-bom:${micronautVersion}")

	testAnnotationProcessor("io.micronaut:micronaut-validation")
	testAnnotationProcessor("io.micronaut:micronaut-inject-java")
	testCompileOnly("io.micronaut:micronaut-inject-java")
	testImplementation("io.micronaut.test:micronaut-test-junit5")
	testImplementation("io.micronaut.configuration:micronaut-flyway")

	testImplementation("org.junit.jupiter:junit-jupiter:5.4.2")
	testImplementation("org.mockito:mockito-junit-jupiter:3.1.0")
	testImplementation("io.rest-assured:rest-assured:4.1.2")
	testImplementation("io.zonky.test:embedded-postgres:1.2.5")
	testImplementation("io.zonky.test.postgres:embedded-postgres-binaries-bom:11.6.0")

}

test {
	useJUnitPlatform()
}

jar {
	manifest {
		attributes "Main-Class": mainClassName
	}
}

shadowJar {
	mergeServiceFiles()
}
