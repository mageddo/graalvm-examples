buildscript {
	repositories {
		mavenLocal()
	}
}

plugins {
	id "java"
	id "com.palantir.graal" version "0.4.0"
	id "com.mageddo.graal-reflection-configuration-generator" version "2.0.2"
}

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
		maven { url "https://dl.bintray.com/micronaut/core-releases-local" }
		maven { url = 'https://oss.sonatype.org/service/local/repositories/releases/content' }
	}
	apply plugin: 'java'
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

def className = "com.mageddo.micronaut.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

task run(type: JavaExec){
	classpath = sourceSets.main.runtimeClasspath
	main = className
}

graal {
	mainClass className
	graalVersion(graalVMVersion)
	outputName(project.name)
	option("-H:IncludeResources=static/.*|templates/.*|.*.properties|.*.xml|META-INF/http/.*")
	option("-H:IncludeResources=application.properties")
	option("--allow-incomplete-classpath")
	option("-H:ReflectionConfigurationFiles=${project.buildDir}/reflect.json")
	option("-H:+AllowVMInspection")
	option("--initialize-at-run-time=io.netty.handler.codec.http.HttpObjectEncoder,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder,io.netty.handler.ssl.util.ThreadLocalInsecureRandom,com.sun.jndi.dns.DnsClient")
	option("--initialize-at-build-time=org.postgresql.Driver")
	option("--initialize-at-build-time=org.postgresql.util.SharedTimer")
	option("--no-fallback")
	option("-H:+ReportUnsupportedElementsAtRuntime")
	option("-H:+TraceClassInitialization")
	option("-H:EnableURLProtocols=http")
	option("-Dfile.encoding=UTF-8")
	option("--no-server")
	option("-J-Xmx5G")
}

dependencies {

	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	annotationProcessor('com.mageddo:rsl-compiler:1.0.1')

	compile 'com.zaxxer:HikariCP:3.3.1'
	compile ("org.postgresql:postgresql:42.2.5")

	compile ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	compile ("io.micronaut:micronaut-spring:${micronautVersion}")

	annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-http-client:${micronautVersion}"
	compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
	compile "io.micronaut:micronaut-runtime:${micronautVersion}"

	compileOnly "io.micronaut:micronaut-inject-java:${micronautVersion}"
	annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
	compile "io.micronaut:micronaut-inject:${micronautVersion}"
	compile ("io.micronaut:micronaut-views-thymeleaf:1.2.0")

	compile("com.mageddo:rsl:1.0.0")
	compile("com.mageddo:commons:1.5.0")
	compile ("ch.qos.logback:logback-classic:1.2.3")

//	tag::graal[]
	annotationProcessor "io.micronaut:micronaut-graal:${micronautVersion}"
	compileOnly("com.mageddo:graal-reflection-configuration:2.0.0")
	compileOnly("com.oracle.substratevm:svm:${graalVMVersion}")
	compile ("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	//end::graal[]

	testCompileOnly 'org.projectlombok:lombok:1.18.10'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

	testAnnotationProcessor('com.mageddo:rsl-compiler:1.0.1')
	testAnnotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

	testCompile(project(":test-commons"))

}

test {
	useJUnitPlatform()
}

project(":test-commons"){
	dependencies {

		compileOnly 'org.projectlombok:lombok:1.18.10'
		annotationProcessor 'org.projectlombok:lombok:1.18.10'

		annotationProcessor('com.mageddo:rsl-compiler:1.0.1')
		annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

		compile "org.junit.jupiter:junit-jupiter:5.4.2"
		compile "org.mockito:mockito-junit-jupiter:3.1.0"
		compile "io.rest-assured:rest-assured:4.1.2"
		compile "io.micronaut.test:micronaut-test-junit5:1.1.2"
		compile "io.micronaut.configuration:micronaut-flyway:1.1.0"
		compile "io.zonky.test:embedded-postgres:1.2.5"
		compile 'io.zonky.test.postgres:embedded-postgres-binaries-bom:11.6.0'
		compile "io.micronaut:micronaut-inject-java:${micronautVersion}"
		compileOnly ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	}
}

nativeImage.dependsOn(tasks.reflectConfigFiles)
