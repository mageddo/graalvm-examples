buildscript {
	repositories {
		mavenLocal()
	}
}

plugins {
	id "java"
	id "application"
	id "com.palantir.graal" version "0.6.0-36-ga4a46b6"
	id "org.flywaydb.flyway" version "5.0.7"
}

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	apply plugin: 'java'
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

mainClassName = "com.mageddo.micronaut.Application"

task debug(type: JavaExec){
	debug = true
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
}

graal {
	mainClass mainClassName
	graalVersion(graalVMVersion)
	outputName(project.name)
	option("-J-Xmx5G")
	option("--no-server")
}

jar {
	archiveBaseName = "${project.name}-all"
	into("lib") {
		from configurations.runtime
	}
}

flyway {
	url = "jdbc:postgresql://localhost:5433/db"
	user = "root"
	password = "root"
	validateOnMigrate = false
	locations = "${project.projectDir}/src/main/resources/db/migrations"
}

configurations {
	compile.exclude module: 'spring-jcl'
}

dependencies {

	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	annotationProcessor('com.mageddo:rsl-compiler:1.0.1')

	compile ("com.zaxxer:HikariCP:3.3.1")
	compile ("org.postgresql:postgresql:42.2.5")

	compile ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	compile ("io.micronaut:micronaut-spring:${micronautVersion}")
//	compile ("io.micronaut.configuration:micronaut-jdbc-hikari:1.2.3")

	annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-validation:${micronautVersion}"
	compile "io.micronaut:micronaut-http-client:${micronautVersion}"
	compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
	compile "io.micronaut:micronaut-runtime:${micronautVersion}"

	compileOnly "io.micronaut:micronaut-inject-java:${micronautVersion}"
	annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
	compile "io.micronaut:micronaut-inject:${micronautVersion}"
	compile ("io.micronaut:micronaut-views-thymeleaf:1.2.0")

	compile("com.mageddo:rsl:1.0.0")
	compile("com.mageddo:commons:1.5.0")
	compile ("ch.qos.logback:logback-classic:1.2.3")

//	tag::graal[]
	annotationProcessor "io.micronaut:micronaut-graal:${micronautVersion}"
	compileOnly("com.oracle.substratevm:svm:19.2.1")
	compile ("org.graalvm.sdk:graal-sdk:${graalVMVersion}")
	compile ("commons-logging:commons-logging:1.2")

	//end::graal[]

	testCompileOnly 'org.projectlombok:lombok:1.18.10'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

	testAnnotationProcessor('com.mageddo:rsl-compiler:1.0.1')
	testAnnotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

	testCompile(project(":test-commons"))

}

test {
	useJUnitPlatform()
}

project(":test-commons"){
	dependencies {

		compileOnly 'org.projectlombok:lombok:1.18.10'
		annotationProcessor 'org.projectlombok:lombok:1.18.10'

		annotationProcessor('com.mageddo:rsl-compiler:1.0.1')
		annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

		compile "org.junit.jupiter:junit-jupiter:5.4.2"
		compile "org.mockito:mockito-junit-jupiter:3.1.0"
		compile "io.rest-assured:rest-assured:4.1.2"
		compile "io.micronaut.test:micronaut-test-junit5:1.1.2"
		compile "io.micronaut.configuration:micronaut-flyway:1.1.0"
		compile "io.zonky.test:embedded-postgres:1.2.5"
		compile 'io.zonky.test.postgres:embedded-postgres-binaries-bom:11.6.0'
		compile "io.micronaut:micronaut-inject-java:${micronautVersion}"
		compileOnly ("org.springframework:spring-jdbc:5.1.5.RELEASE")
	}
}
